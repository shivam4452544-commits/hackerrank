#include <stdio.h>
#include <string.h>
#include <stdlib.h>

long long samAndSubstrings(char* n) {
    long long totalSum = 0;
    long long currentLastDigitSum = 0; // sum of substrings ending at current index
    long long mod = 1000000007;
    int len = strlen(n);

    for (int i = 0; i < len; i++) {
        int digit = n[i] - '0';
        // Calculate the sum of substrings ending at the current index
        // This is (previous sum of substrings ending at previous index * 10)
        // + (current digit * (i + 1))
        currentLastDigitSum = (currentLastDigitSum * 10 + (long long)digit * (i + 1)) % mod;
        totalSum = (totalSum + currentLastDigitSum) % mod;
    }

    return totalSum;
}

int main() {
    char s[100001]; // Max length of string is 10^5
    scanf("%s", s);
    long long result = samAndSubstrings(s);
    printf("%lld\n", result);
    return 0;
}
